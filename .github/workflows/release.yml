# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Set Version
      run: mvn versions:set -DnewVersion=${GITHUB_REF##*/}
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
      # Build the Docker image
    - name: Build "core-service" Docker
      working-directory: ./core-service
      run: |-
        docker build \
          --tag "ghcr.io/invees/portal/core-service:${GITHUB_REF##*/}" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
          
    # Login to ghcr
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    # Public to ghcr
    - name: Publish
      run: |-
        docker push "ghcr.io/invees/portal/core-service:${GITHUB_REF##*/}"
        
    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
